services: docker
env:
  DOCKER_COMPOSE_VERSION: 1.7.0
before_install:
  # Upgrade docker/docker-compose versions so we can use v2 of the Dockerfile format
  - docker -v
  - sudo apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install docker-engine
  - docker -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m`" > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  # Use the env config
  - cp .env.example .env
  # set env vars in the build settings to interact with repositories
  # see https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings
  - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  # Start the docker stuff
  - docker-compose -v
install:
  # Install dev php dependencies
  - docker exec -it --user=www-data $(docker-compose ps -q cli) composer install --no-interaction --prefer-dist
script:
  # Ensure phpcs triggers a failing build
  - docker exec -it --user=www-data $(docker-compose ps -q cli) vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
  # Ensure breaking PSR2 compliance fails in CI
  - docker exec -it --user=www-data $(docker-compose ps -q cli) vendor/bin/phpcs --standard=PSR2 --ignore=app/Http/routes.php app
  # Run tests
  - docker exec -it --user=www-data $(docker-compose ps -q cli) vendor/bin/phpunit --testsuite=unit
deploy:
  provider: script
  script: docker images && docker tag "${DOCKER_REPO}:cli" "${DOCKER_REPO}:${TRAVIS_TAG}" && docker push "${DOCKER_REPO}:${TRAVIS_TAG}"
  skip_cleanup: false
  on:
    tags: true